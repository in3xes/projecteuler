import math

#Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
#Triangle   T_(n)=n(n+1)/2   1, 3, 6, 10, 15, ...
#Pentagonal   P_(n)=n(3n-1)/2   1, 5, 12, 22, 35, ...
#Hexagonal   H_(n)=n(2n-1)   1, 6, 15, 28, 45, ...
#
#It can be verified that T_(285) = P_(165) = H_(143) = 40755.
#
#Find the next triangle number that is also pentagonal and hexagonal.

# Let the number be 'N'
# N = T(t) = P(p) = H(h)
# N = t(t+1)/2 = p(3p-1)/2 = h(2h-1)
# t^2 + t - 2N = 0           => t= [-1 + rt(1+8N)] /2
# 3p^2 - p - 2N = 0          => p= [1 + rt(1+24N)] /6
# 2h^2 - h - N =0            => h= [1 + rt(1+8N)] /4


def hex(h):
    return h*(2*h-1)

def pent(p):
    return p*(3*p-1)/2

def tri(t):
    return t*(t+1)/2

def root(n):
    return math.sqrt(n)

def ntri(n):
	return (-1 + math.sqrt(1 + 8*n) ) / 2.0
def npent(n):
	return (1 + math.sqrt(1 + 24*n)) / 6.0
def nhex(n):
	return (1 + math.sqrt(1 + 8*n)) / 4.0 
print root(2)

counter = 2
while 1==1:
	hexnum = hex(counter)
	np = npent (hexnum)
	nt = ntri (hexnum)

#	print "np=", np," int =", int(np)
#	print "nt=", nt," int =", int(nt)

        if np/int(np) < 1.000000000000005 and nt/int(nt) < 1.0000000000000005 :
		print "True!"
		print "Number is:", hexnum

		print "nt=", nt," int =", int(nt)
		print "counter = ", counter
		print "np=", np," int =", int(np)
		if hexnum > 40755:
			break

	counter = counter + 1

	if counter > 50000:
		break


	
	


# Pentagonal numbers are generated by the formula,
# P_(n)=n(3n-1)/2. The first ten pentagonal numbers are:

#     1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

#     It can be seen that P_(4) + P_(7) = 22 + 70 = 92 =
#     P_(8). However, their difference, 70-22 = 48, is not
#     pentagonal.

#     Find the pair of pentagonal numbers, P_(j) and P_(k), for which
#     their sum and difference is pentagonal and
#     D = |P_(k) - P_(j)| is minimised; what is the value of D?
    
def pent_gen(final_n):
    n = 1
    while n <= final_n:
        yield (n*(3*n-1)/2)
        n += 1

    raise StopIteration

pent = []
for i in pent_gen(1000):
    pent.append(i)


num = range(10,20)
numt = map(lambda x: (3*x - 1) % 10, num)
finaln = [(num[x] * numt[x]/2) % 10 for x in xrange(0,10)]
finaln1 = [(num[x] % 10 * numt[x]/2) % 10 for x in xrange(0,10)]
##################################
# print map(lambda x: x%10, num) #
# print numt                     #
# print finaln                   #
# print finaln1                  #
##################################

modset = []
for i in xrange(1,50):
    val=((i*(3*i-1)/2) % 10)
    if val not in modset:
        modset.append(val)

print " ",
for i in modset:
    print i,

print

for i in modset:
    print i, 
    for j in modset:
        if (i+j)%10 in modset and (i-j)%10 in modset:
            print 'T',
        else:
            print '-',
    print

    
    



    
